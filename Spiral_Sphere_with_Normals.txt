// Declare input parameters
int numPoints = chi("numPoints");
int spiralTurns = chi("spiralTurns");
float radius = chf("radius");
float topAngle = chf("topAngle");
float middleAngle = chf("middleAngle");
float bottomAngle = chf("bottomAngle");

// Calculate the delta angle for each point along the spiral
float deltaAngle = (2 * M_PI * spiralTurns) / float(numPoints - 1);

// Calculate the total arc length of the spiral on the sphere's surface
float spiralArcLength = M_PI * radius * spiralTurns;

// Calculate the distance between points along the spiral
float pointSpacing = spiralArcLength / float(numPoints - 1);

// Loop through the points and create the spiral pattern
for (int i = 0; i < numPoints; ++i)
{
    // Calculate the arc length along the spiral for the current point
    float currentArcLength = pointSpacing * i;

    // Calculate the normalized height (from 0 to 1) along the sphere
    float normalizedHeight = currentArcLength / spiralArcLength;

    // Calculate the polar coordinates for the point
    float theta = deltaAngle * i;
    float phi = M_PI * normalizedHeight;

    // Convert the polar coordinates to Cartesian coordinates
    vector pos;
    pos.x = radius * sin(phi) * cos(theta);
    pos.y = radius * cos(phi);
    pos.z = radius * sin(phi) * sin(theta);

    // Add the point to the geometry
    int pt = addpoint(geoself(), pos);

    // Calculate the normal for the point
    float currentAngle;
    if (normalizedHeight < 0.5)
    {
        currentAngle = radians(lerp(topAngle, middleAngle, normalizedHeight * 2));
    }
    else
    {
        currentAngle = radians(lerp(middleAngle, bottomAngle, (normalizedHeight - 0.5) * 2));
    }
    vector normal;
    normal.x = cos(theta) * cos(currentAngle);
    normal.y = sin(currentAngle);
    normal.z = sin(theta) * cos(currentAngle);

    // Set the normal for the point
    setpointattrib(geoself(), "N", pt, normal, "set");

    // Calculate the up vector for the point
    vector up = set(0, 1, 0);
    vector tangent = normalize(cross(normal, up));
    vector newUp = cross(tangent, normal);

    // Set the up vector for the point
    setpointattrib(geoself(), "up", pt, newUp, "set");
}
